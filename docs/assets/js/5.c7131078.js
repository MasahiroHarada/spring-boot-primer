(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{152:function(t,a,s){t.exports=s.p+"assets/img/sts-add-controller-1.3505a041.png"},153:function(t,a,s){t.exports=s.p+"assets/img/sts-add-controller-2.a0064abd.png"},194:function(t,a,s){"use strict";s.r(a);var n=[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"コントローラー"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#コントローラー","aria-hidden":"true"}},[t._v("#")]),t._v(" コントローラー")]),n("p",[t._v("前置きが少し長くなりましたが、ここから本格的にコードを書いていきます。")]),n("p",[t._v("まずはコントローラークラスを追加します。")]),n("h2",{attrs:{id:"パッケージの追加"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#パッケージの追加","aria-hidden":"true"}},[t._v("#")]),t._v(" パッケージの追加")]),n("p",[t._v("中規模以上のプロジェクトでは MVC やそのほかのクラスの役割に応じてディレクトリ（パッケージ）を分けるのが普通です。今回のチュートリアルは小規模ですがやり方に慣れるために、コントローラークラスを配置するパッケージを作成します。")]),n("p",[t._v("Package Explorer の「com.example.search」を右クリックするとメニューが表示されますので、「New」→「Package」を選択してください。")]),n("p",[n("img",{attrs:{src:s(152),alt:"STS Add Controller"}})]),n("p",[t._v("ダイアログが表示されますので、「Name」に「com.example.search.controllers」と入力してください。「controllers」だけでなく「com.example.search.」も必要ですので注意しましょう。")]),n("p",[n("img",{attrs:{src:s(153),alt:"STS Add Controller"}})]),n("p",[t._v("入力できたら「Finish」をクリックして完了です。")]),n("h2",{attrs:{id:"コントローラークラス"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#コントローラークラス","aria-hidden":"true"}},[t._v("#")]),t._v(" コントローラークラス")]),n("h3",{attrs:{id:"ファイルの追加"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ファイルの追加","aria-hidden":"true"}},[t._v("#")]),t._v(" ファイルの追加")]),n("p",[t._v("Package Explorer を確認してください。「com.example.search」の下に「controllers」というパッケージが作成されているはずです。")]),n("p",[t._v("次はその「controllers」を右クリックして「New」→「Class」を選択します。ダイアログが表示されますので「Name」に「HelloController」と入力して「Finish」をクリックします。")]),n("p",[n("code",[t._v("HelloController.java")]),t._v(" が作成されているはずですので、以下のコードを書いてください。ただ書き始める前にひとつ注意点です。"),n("strong",[t._v("import 文を手入力しない")]),t._v("ようにしてください。import 文はエディタの機能で自動補完できますし、そちらの方が早くて正確です。とりあえず import 文は飛ばして入力しましょう。")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("controllers"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stereotype"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Controller"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetMapping"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Controller")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("HelloController")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"/hello"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" String "),n("span",{attrs:{class:"token function"}},[t._v("index")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("import 文を飛ばして入力できたら「@Controller」「@GetMapping」の下にエラーを示す赤い下線が引かれているはずです。ここでショートカットキー "),n("code",[t._v("Ctrl + Shift + O")]),t._v(" を入力すると、import 文が自動的に挿入されます。エラーの赤線も消えたでしょう。")]),n("h3",{attrs:{id:"コード解説"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#コード解説","aria-hidden":"true"}},[t._v("#")]),t._v(" コード解説")]),n("p",[t._v("さて、ここで少し先ほど追加したコードの説明をします。")]),n("h4",{attrs:{id:"アノテーション"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#アノテーション","aria-hidden":"true"}},[t._v("#")]),t._v(" アノテーション")]),n("p",[t._v("だいたい基本的なコードというか、クラスにメソッドが定義されているだけですが、「"),n("strong",[t._v("@Controller")]),t._v("」「"),n("strong",[t._v("@GetMapping")]),t._v("」という記述が目に止まるのではないでしょうか。")]),n("p",[t._v("この「@Xxx」という言語機能は"),n("strong",[t._v("アノテーション")]),t._v("と言います。アノテーションはクラスやプロパティ、メソッドに付加することができ、コンパイル時にアノテーション側で定義した特定の処理を実行するための機能です。")]),n("p",[t._v("「@Controller」と「@GetMapping」は import 文を見てわかるように、どちらも Spring フレームワークが提供するアノテーションです。クラスに「@Contorller」アノテーションが付加されているとコンパイル時に HTTP リクエストの受け取りなど Spring フレームワーク内でコントローラークラスが持つべきとされる機能が追加されます[^1]。")]),n("p",[t._v("続いて「@GetMapping」ですが、これはルーティングの機能を果たしています。つまり、引数の URL と Java 側のメソッドを紐づけます。結果として URL への GET リクエストを受信したときにメソッドが実行されます。ちなみにご想像の通り「@PostMapping」もあります。")]),n("p",[t._v("上記の例でいうと、アプリケーションが "),n("code",[t._v("/hello")]),t._v(" への GET リクエストを受け取ると "),n("code",[t._v("index")]),t._v(" メソッドが実行されます。")]),n("p",[t._v("メソッド名に関しては Spring 側での規約はありません。Java 的に OK なメソッド名であれば任意の名前で構いません。アノテーションさえ付いていればリクエストとのマッピングが行われます。")]),n("p",[t._v("つまり、")]),n("ul",[n("li",[t._v("クラスに「@Controller」を付ける。")]),n("li",[t._v("メソッドに「@GetMapping」「@PostMapping」を付けて リクエスト URL + HTTP メソッドを紐付ける。")])]),n("p",[t._v("というのが Spring におけるルーティングのパターンです。")]),n("p",[t._v("[^1]: コントローラーとしての基本機能が定義された親クラスを継承するスタイルでも同様のことは実現できそうですが、一般的に継承関係が深くなると複雑性が増してよろしくないと言われていますので、アノテーションを用いた Spring のスタイルはよりシンプルな表現と言えるでしょう。")]),n("h4",{attrs:{id:"戻り値"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#戻り値","aria-hidden":"true"}},[t._v("#")]),t._v(" 戻り値")]),n("p",[t._v("次に戻り値を見てみましょう。")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"hello"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v('"hello"')]),t._v(" という文字列を返していますね。ただ、だからと言ってクライアント側に "),n("code",[t._v('"hello"')]),t._v(" という文字列がレスポンスされるわけではありません。")]),n("p",[t._v("「@GetMapping」や「@PostMapping」でリクエストマッピングがされたメソッドが返す文字列は、"),n("strong",[t._v("テンプレートの名前と解釈されます")]),t._v("。")]),n("p",[n("code",[t._v("src/main/resources/templates")]),t._v(" の下に配置された "),n("code",[t._v("hello.html")]),t._v("（拡張子は使用するテンプレートエンジン次第ですが）が呼び出され、レスポンスの HTML が生成されるのです。")]),n("p",[t._v("では、次のページで実際にテンプレートを作成しましょう。")])])}],r=s(0),e=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);a.default=e.exports}}]);