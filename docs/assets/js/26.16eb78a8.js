(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{170:function(t,a,s){t.exports=s.p+"assets/img/sts-generate-code.2b050783.png"},174:function(t,a,s){"use strict";s.r(a);var n=[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"object-relational-マッピング"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#object-relational-マッピング","aria-hidden":"true"}},[t._v("#")]),t._v(" Object-Relational マッピング")]),n("p",[t._v("前のページでアプリケーションで使うテーブルが揃いました。")]),n("p",[t._v("このページではアプリケーションからそのテーブルのデータを操作するためのコードを追加します。少し難しいですが、頑張ってください。全体が見えてからのもう一度読み直すと理解しやすいかもしれません。")]),n("h2",{attrs:{id:"object-relational-マッピングとは"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#object-relational-マッピングとは","aria-hidden":"true"}},[t._v("#")]),t._v(" Object-Relational マッピングとは")]),n("p",[t._v("Object-Relational マッピング（ORM）とは、アプリケーションからデータベースの操作をしやすくするためのプログラミング手法です。")]),n("p",[t._v("オブジェクト指向モデルであるアプリケーション（例：Java）とリレーショナルデータベース（例：PostgreSQL）では、そもそもデータの持ち方が違います。")]),n("p",[t._v("オブジェクト指向では、クラスがあってプロパティにデータを持ちます。例えば以下のように。")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" String email"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" String password"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 中略")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("一方リレーショナルモデルでは行と列、つまりテーブルでデータを持ちます。")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("users テーブル\n| email           | password |\n|-----------------|----------|\n| sample@mail.com | test1234 |\n")])])]),n("p",[t._v("例えば "),n("code",[t._v("users")]),t._v(" テーブルから取得したデータを、毎回 "),n("code",[t._v("User")]),t._v(" クラスに詰めなおすのは面倒ですね。"),n("code",[t._v("User")]),t._v(" クラスのデータを "),n("code",[t._v("user")]),t._v(" テーブルに挿入したい場合も、いちいちプロパティからデータを引っ張ってきて INSERT 文を作るのは面倒です。そこであらかじめアプリ側のデータとテーブル側のデータの紐づけを定義しておこうというのが ORM です。")]),n("p",[t._v("言葉だけでは理解が難しいと思いますので、コードを書きながら ORM の働きを体得してください。")]),n("h2",{attrs:{id:"ドメインクラス"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ドメインクラス","aria-hidden":"true"}},[t._v("#")]),t._v(" ドメインクラス")]),n("p",[t._v("まず Java 側でデータを入れる箱になるクラスを用意しましょう。このような役割を持つクラスをドメインクラスやエンティティクラス、モデルクラスなどと呼びます。")]),n("p",[n("code",[t._v("com.example.search")]),t._v(" 配下に "),n("code",[t._v("domains")]),t._v(" パッケージを新たに作成してください。そしてそこに "),n("code",[t._v("Member.java")]),t._v(" クラスファイルを作成しましょう。")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domains"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Member")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" String name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Member")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("getId")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" id"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("setId")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" String "),n("span",{attrs:{class:"token function"}},[t._v("getName")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("setName")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("ここでまた便利なショートカットキーを紹介します。コンストラクタやゲッター・セッターを自動生成するショートカットです。"),n("code",[t._v("Ctrl + Alt + S")]),t._v(" を入力してください。以下のダイアログが表示されるでしょう。")]),n("p",[n("img",{attrs:{src:s(170),alt:"STS Generate code"}})]),n("p",[t._v("「Generate Getters and Setters...」や「Generate Constructor using Fields...」を選ぶと対象のプロパティを聞かれるので、チェックを入れて「Finish」をクリックするとコードが自動生成されます。")]),n("p",[t._v("またここまで読んで、"),n("strong",[t._v("ドメインクラスひとつがテーブルひとつに対応する")]),t._v("ように作ればいいのか、と考えた方もいるでしょうか。基本的にはその通りです。複雑なアプリケーションになるともちろん例外も出てきますが、まずはテーブルに対応するドメインクラス（またはエンティティまたはモデル）を作成する認識で OK です。")]),n("h2",{attrs:{id:"mybatis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mybatis","aria-hidden":"true"}},[t._v("#")]),t._v(" MyBatis")]),n("p",[t._v("ORM ライブラリも言語やフレームワークによっていろいろ存在します。Java の世界でもいくつか選択肢がありますが、今回は "),n("strong",[t._v("MyBatis")]),t._v(" というライブラリを使用します。")]),n("p",[t._v("ここからは MyBatis での実装方法です。ライブラリが変われば実装方法も変わります（ドメインクラスはどのような ORM ライブラリでも大体必要になる）。")]),n("p",[t._v("また、まずは member テーブルの一覧を取得する機能から実装していく前提で進めます。")]),n("h3",{attrs:{id:"mapper-インターフェース"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mapper-インターフェース","aria-hidden":"true"}},[t._v("#")]),t._v(" Mapper インターフェース")]),n("p",[t._v("Java から SQL を発行するための仲介役となるインターフェースおよびメソッドを定義します。")]),n("p",[t._v("どういうことかというと、")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("db"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("exec")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"SELECT * FROM members"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("ORM の考え方では上記のような書き方はしないのです。リレーショナルの世界の言葉（SQL）がオブジェクト指向の世界（Java）に入り込んでしまっていて良くないと考えられます。")]),n("p",[t._v("その代わり Mapper を介して、")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("memberMapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("all")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("と書けたほうが、簡単にいうと「Javaっぽくてカッコよくね」というわけです。この "),n("code",[t._v("all")]),t._v(" メソッドを呼んだときに実際にどのような SQL が発行されるかは後述の XML で定義します。")]),n("p",[n("code",[t._v("com.example.search")]),t._v(" 配下に "),n("code",[t._v("mappers")]),t._v(" パッケージを新たに作成してください。そしてそこに "),n("code",[t._v("MemberMapper.java")]),t._v(" インターフェースファイルを作成しましょう。")]),n("p",[t._v("クラスではなく"),n("strong",[t._v("インターフェース")]),t._v("なので注意してください。")]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mappers"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("List"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apache"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ibatis"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotations"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" com"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domains"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Member"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Mapper")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("MemberMapper")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    List"),n("span",{attrs:{class:"token generics function"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Member"),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("all")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("新しいアノテーション「@Mapper」が登場しましたね。「@Mapper」アノテーションをインターフェースに付加すると、コンパイル時に以下で説明する XML ファイルを読み込んで自動的に具象クラスが作成されます。")]),n("p",[t._v("ちょっと不思議な感じがするかもしれませんが、最初はそういうもんだと思ってパターンを覚えてしまえばいいでしょう。")]),n("h3",{attrs:{id:"xmlでのマッピング"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xmlでのマッピング","aria-hidden":"true"}},[t._v("#")]),t._v(" XMLでのマッピング")]),n("p",[t._v("MyBatis では「アプリ側のデータとテーブル側のデータの紐づけを定義」を XML ファイルで行います。")]),n("p",[n("code",[t._v("src/main/resources")]),t._v(" の下にさらに "),n("code",[t._v("com/example/search/mappers")]),t._v(" というディレクトリ[^1]を作成します。ディレクトリができたらその中に "),n("code",[t._v("MemberMapper.xml")]),t._v(" というファイルを作成し、以下の内容を記述してください。")]),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8" ?>')]),t._v("\n"),n("span",{attrs:{class:"token doctype"}},[t._v('<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">')]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mapper")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("namespace")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.example.search.mappers.MemberMapper"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- 結果と結果を受け取るクラスの紐づけ --\x3e")]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("resultMap")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("memberResultMap"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.example.search.domains.Member"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("result")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("property")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("column")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n      "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("result")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("property")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("column")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("resultMap")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- SQL --\x3e")]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("select")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("all"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("resultMap")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("memberResultMap"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        SELECT * FROM members\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("select")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mapper")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("[^1]: ディレクトリが重要なので間違わないように注意してください。つまり Mapper インターフェースのパッケージ名「com.example.search.mappers」に合わせたディレクトリ階層にするということです。このルールを守ることで自動的に XML ファイルを検出して読み込んでくれるらしいです。設定で変更することもできるようですが今回は MyBatis の詳細な設定方法までは追いません。")]),n("p",[t._v("XML ファイルの内容を説明していきます。")]),n("h4",{attrs:{id:"mapper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mapper","aria-hidden":"true"}},[t._v("#")]),n("code",[t._v("<mapper>")])]),n("p",[t._v("まずルート要素は "),n("code",[t._v("<mapper>")]),t._v(" です。"),n("code",[t._v("namespace")]),t._v(" 属性に対応するインターフェースの名前空間を記述しましょう。")]),n("p",[n("code",[t._v("<mapper>")]),t._v(" の子要素が2つありますね。"),n("code",[t._v("<resultMap>")]),t._v(" と "),n("code",[t._v("<select>")]),t._v(" です。")]),n("h4",{attrs:{id:"resultmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resultmap","aria-hidden":"true"}},[t._v("#")]),n("code",[t._v("<resultMap>")])]),n("p",[n("code",[t._v("<resultMap>")]),t._v(" は「クエリ結果のどのカラムとクラスのどのプロパティが紐づくか」を定義します。")]),n("ul",[n("li",[n("code",[t._v("id")]),t._v(" 属性は後で他の要素から参照するときに使用する ID です。")]),n("li",[n("code",[t._v("type")]),t._v(" 属性はアプリ側のデータの入れ物クラス＝ドメインクラスの型名です。"),n("code",[t._v("com")]),t._v(" からの完全修飾名でなくてはいけませんので注意してください。")])]),n("p",[n("code",[t._v("<resultMap>")]),t._v(" の中には "),n("code",[t._v("<result>")]),t._v(" が並びます。"),n("code",[t._v("property")]),t._v(" と "),n("code",[t._v("column")]),t._v(" という2つの属性を持っています。")]),n("ul",[n("li",[n("code",[t._v("property")]),t._v(" 属性にはクラスのプロパティ名を記述します。")]),n("li",[n("code",[t._v("column")]),t._v(" 属性にはクエリ結果のカラム名を記述します。")])]),n("h4",{attrs:{id:"select"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#select","aria-hidden":"true"}},[t._v("#")]),n("code",[t._v("<select>")])]),n("p",[n("code",[t._v("<select>")]),t._v(" は「Mapper のメソッドと SQL の紐づき」を定義します。")]),n("p",[n("code",[t._v("id")]),t._v(" と "),n("code",[t._v("resultMap")]),t._v(" という2つの属性が定義されていますね。")]),n("ul",[n("li",[n("code",[t._v("id")]),t._v(" 属性には Mapper 側のメソッド名を記述します。")]),n("li",[n("code",[t._v("resultMap")]),t._v(" 属性には SELECT 文の結果をどのクラスにどのように紐づけるかを定義します。ここで "),n("code",[t._v("<resultMap>")]),t._v(" の "),n("code",[t._v("id")]),t._v(" を参照するわけです。")])]),n("p",[n("code",[t._v("<select>")]),t._v(" の中には実行したい SQL 文（"),n("code",[t._v("<select>")]),t._v(" なので SELECT 文）を記述します。")]),n("h4",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考")]),n("p",[t._v("http://www.mybatis.org/mybatis-3/ja/sqlmap-xml.html#Result_Maps")]),n("h3",{attrs:{id:"まとめると"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#まとめると","aria-hidden":"true"}},[t._v("#")]),t._v(" まとめると")]),n("h4",{attrs:{id:"処理の流れ"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#処理の流れ","aria-hidden":"true"}},[t._v("#")]),t._v(" 処理の流れ")]),n("ol",[n("li",[n("code",[t._v("memberMapper.all()")]),t._v(" を実行する。")]),n("li",[t._v("XML で定義された通り、"),n("code",[t._v('<select id="all">')]),t._v(" の中の SQL（"),n("code",[t._v("SELECT * FROM members")]),t._v("）が発行される。")]),n("li",[t._v("クエリの結果が返ってくる。")]),n("li",[t._v("クエリの結果をどのようにマッピングするかは、"),n("code",[t._v("<select>")]),t._v(" の "),n("code",[t._v("resultMap")]),t._v(" 属性に書いてある。ここでは "),n("code",[t._v("memberResultMap")]),t._v(" と記述されているので、"),n("code",[t._v("id")]),t._v(" が "),n("code",[t._v("memberResultMap")]),t._v(" である "),n("code",[t._v("<resultMap>")]),t._v(" 要素を参照する。")]),n("li",[n("code",[t._v('<resultMap id="memberResultMap">')]),t._v(" を参照すると、クエリ結果の "),n("code",[t._v("id")]),t._v(" を "),n("code",[t._v("Member")]),t._v(" クラスの "),n("code",[t._v("id")]),t._v(" プロパティに、クエリ結果の "),n("code",[t._v("name")]),t._v(" を "),n("code",[t._v("name")]),t._v(" プロパティに紐づけるよう定義されている。")]),n("li",[t._v("定義の通りにクエリの結果データが格納されたクラスのインスタンスが生成される。クエリの結果行ごとにインスタンスは生成される。")]),n("li",[t._v("Mapper では "),n("code",[t._v("all")]),t._v(" の戻り値は "),n("code",[t._v("List<Member>")]),t._v(" と定義しているため、"),n("code",[t._v("Member")]),t._v(" インスタンスが結果行数ぶん入った\n"),n("code",[t._v("List")]),t._v(" が "),n("code",[t._v("all")]),t._v(" メソッドの呼び出し元に返却される。")])]),n("p",[t._v("文字にすると一見ややこしいようですがロジックやアルゴリズムの問題ではなく、ライブラリのルールとしてどことどこが紐づくかというパズルでしかないので落ち着いて取り組んでみてください。")]),n("h4",{attrs:{id:"余談"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#余談","aria-hidden":"true"}},[t._v("#")]),t._v(" 余談")]),n("p",[t._v("XML ファイルでマッピングを定義するのは ORM ライブラリの中でも珍しいのではと思います。ただ社内の割と大規模な受託プロジェクトで採用していると聞いたので取り上げました。")])])}],e=s(0),v=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);a.default=v.exports}}]);